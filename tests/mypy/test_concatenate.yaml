# yaml-language-server: $schema=https://raw.githubusercontent.com/typeddjango/pytest-mypy-plugins/master/pytest_mypy_plugins/schema.json

- case: concatenate_add
  main: |
    from reexport import concatenate
    from f import *

    def f(v: float) -> int: return 1
    reveal_type(concatenate(f, {{ params | join(",") }}, kind="add")) # N: Revealed type is "def ({% for param in params %}{%- if not loop.first %}, {% endif -%}f.{{ param }}{% endfor %}, v: builtins.float) -> builtins.int"
  files:
  - path: f.py
    content: |
      class C1: ...
      class C2: ...
      class C3: ...
      class C4: ...
      class C5: ...
      class C6: ...
      class C7: ...
      class C8: ...
      class C9: ...
  parametrized:
    - params: [C1]
    - params: [C1, C2]
    - params: [C1, C2, C3]
    - params: [C1, C2, C3, C4]
    - params: [C1, C2, C3, C4, C5]
    - params: [C1, C2, C3, C4, C5, C6]
    - params: [C1, C2, C3, C4, C5, C6, C7]
    - params: [C1, C2, C3, C4, C5, C6, C7, C8]
    - params: [C1, C2, C3, C4, C5, C6, C7, C8, C9]
